{"ast":null,"code":"const num_of_rec = 10;\nfunction padWithLeadingZeros(num, totalLength) {\n  return String(num).padStart(totalLength, '0');\n}\nfunction getStatus() {\n  const tmp = Math.random();\n  if (tmp > 0.66) return 'Resolved';\n  if (tmp > 0.33) return 'Shipping';\n  return 'Pending';\n}\nfunction getStatus2() {\n  const tmp = Math.random();\n  if (tmp > 0.5) return 'Checked';\n  return 'Unchecked';\n}\nfunction getRanking() {\n  const tmp = Math.random();\n  if (tmp > 0.9) return 'Gold';\n  if (tmp > 0.7) return 'Silver';\n  return 'Bronze';\n}\nfunction factoryInventory(id) {\n  return {\n    'id': 'SP' + padWithLeadingZeros(id, 3),\n    'name': genName(),\n    'price_in': Math.floor(Math.random() * 1000),\n    'price_out': Math.floor(Math.random() * 1000),\n    'sold': Math.floor(Math.random() * 1000),\n    'quantity': Math.floor(Math.random() * 1000)\n  };\n}\nfunction randomDate(start, end) {\n  const today = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n  const yyyy = today.getFullYear();\n  let mm = today.getMonth() + 1; // Months start at 0!\n  let dd = today.getDate();\n  if (dd < 10) dd = '0' + dd;\n  if (mm < 10) mm = '0' + mm;\n  return yyyy + '/' + mm + '/' + dd;\n}\nfunction factoryOrder(id) {\n  return {\n    'id': 'OR' + padWithLeadingZeros(id, 3),\n    'customer_name': genName() + ' ' + genName(),\n    'date': randomDate(new Date(2023, 0, 1), new Date()),\n    'total': Math.floor(Math.random() * 500) + 500,\n    'status': getStatus()\n  };\n}\nfunction factoryCustomer(id) {\n  return {\n    'id': 'CS' + padWithLeadingZeros(id, 3),\n    'customer_name': genName() + ' ' + genName(),\n    'address': genName() + ' ' + genName() + ' ' + genName(),\n    'phone_number': genPhoneNumber(),\n    'ranking': getRanking()\n  };\n}\nfunction factoryProductOrder(id) {\n  return {\n    'id': 'SP' + padWithLeadingZeros(id, 3),\n    'name': genName() + ' ' + genName(),\n    'price': Math.floor(Math.random() * 1000),\n    'quantity': Math.floor(Math.random() * 10) + 1\n  };\n}\nfunction factoryProvider(id) {\n  return {\n    'id': 'PR' + padWithLeadingZeros(id, 3),\n    'provider_name': genName() + ' ' + genName(),\n    'address': genName() + ' ' + genName() + ' ' + genName(),\n    'phone_number': genPhoneNumber()\n  };\n}\nfunction factoryImport(id) {\n  return {\n    'id': 'IP' + padWithLeadingZeros(id, 3),\n    'provider_name': genName() + ' ' + genName(),\n    'phone_number': genPhoneNumber(),\n    'date': randomDate(new Date(2023, 0, 1), new Date()),\n    'total': Math.floor(Math.random() * 500) + 500,\n    'status': getStatus2()\n  };\n}\nfunction genPhoneNumber() {\n  let a = [48];\n  for (let i = 0; i < 9; ++i) a.push(Math.floor(Math.random() * 10) + 48);\n  return String.fromCharCode(...a);\n}\nfunction genName() {\n  let a = [];\n  for (let i = 0; i < 5; ++i) a.push(Math.floor(Math.random() * 26) + 65);\n  return String.fromCharCode(...a);\n}\nexport function genInventory() {\n  let arr = [];\n  for (let i = 1; i <= num_of_rec; ++i) {\n    arr.push(factoryInventory(i));\n  }\n  return arr;\n}\nexport function genOrder() {\n  let arr = [];\n  for (let i = 1; i <= num_of_rec; ++i) {\n    arr.push(factoryOrder(i));\n  }\n  return arr;\n}\nexport function genCustomer() {\n  let arr = [];\n  for (let i = 1; i <= num_of_rec; ++i) {\n    arr.push(factoryCustomer(i));\n  }\n  return arr;\n}\nexport function genProvider() {\n  let arr = [];\n  for (let i = 1; i <= num_of_rec; ++i) {\n    arr.push(factoryProvider(i));\n  }\n  return arr;\n}\nexport function genProductOrder() {\n  let arr = [];\n  for (let i = 1; i <= num_of_rec; ++i) {\n    let tmp = factoryProductOrder(i);\n    tmp['total'] = tmp['quantity'] * tmp['price'];\n    arr.push(tmp);\n  }\n  return arr;\n}\nexport function genImportProduct() {\n  let arr = [];\n  for (let i = 1; i <= num_of_rec; ++i) {\n    let tmp = factoryImport(i);\n    arr.push(tmp);\n  }\n  return arr;\n}","map":{"version":3,"names":["num_of_rec","padWithLeadingZeros","num","totalLength","String","padStart","getStatus","tmp","Math","random","getStatus2","getRanking","factoryInventory","id","genName","floor","randomDate","start","end","today","Date","getTime","yyyy","getFullYear","mm","getMonth","dd","getDate","factoryOrder","factoryCustomer","genPhoneNumber","factoryProductOrder","factoryProvider","factoryImport","a","i","push","fromCharCode","genInventory","arr","genOrder","genCustomer","genProvider","genProductOrder","genImportProduct"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/management_demo1-main/src/gen.js"],"sourcesContent":["const num_of_rec = 10;\nfunction padWithLeadingZeros(num, totalLength) {\n    return String(num).padStart(totalLength, '0');\n}\n\nfunction getStatus() {\n    const tmp = Math.random();\n    if (tmp > 0.66) return 'Resolved';\n    if (tmp > 0.33) return 'Shipping';\n    return 'Pending';\n}\nfunction getStatus2() {\n    const tmp = Math.random();\n    if (tmp > 0.5) return 'Checked';\n    return 'Unchecked';\n}\nfunction getRanking() {\n    const tmp = Math.random();\n    if (tmp > 0.9) return 'Gold';\n    if (tmp > 0.7) return 'Silver';\n    return 'Bronze';\n}\nfunction factoryInventory(id) {\n    return {\n        'id': 'SP' + padWithLeadingZeros(id, 3),\n        'name': genName(),\n        'price_in': Math.floor(Math.random() * 1000),\n        'price_out': Math.floor(Math.random() * 1000),\n        'sold': Math.floor(Math.random() * 1000),\n        'quantity': Math.floor(Math.random() * 1000)\n    }\n}\nfunction randomDate(start, end) {\n    const today = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n\n    return yyyy + '/' + mm + '/' + dd;\n}\nfunction factoryOrder(id) {\n    return {\n        'id': 'OR' + padWithLeadingZeros(id, 3),\n        'customer_name': genName() + ' ' + genName(),\n        'date': randomDate(new Date(2023, 0, 1), new Date()),\n        'total': Math.floor(Math.random() * 500) + 500,\n        'status': getStatus(),\n    }\n}\nfunction factoryCustomer(id) {\n    return {\n        'id': 'CS' + padWithLeadingZeros(id, 3),\n        'customer_name': genName() + ' ' + genName(),\n        'address': genName() + ' ' + genName() + ' ' + genName(),\n        'phone_number': genPhoneNumber(),\n        'ranking': getRanking(),\n    }\n}\nfunction factoryProductOrder(id) {\n    return {\n        'id': 'SP' + padWithLeadingZeros(id, 3),\n        'name': genName() + ' ' + genName(),\n        'price': Math.floor(Math.random() * 1000),\n        'quantity': Math.floor(Math.random() * 10) + 1,\n    }\n}\nfunction factoryProvider(id) {\n    return {\n        'id': 'PR' + padWithLeadingZeros(id, 3),\n        'provider_name': genName() + ' ' + genName(),\n        'address': genName() + ' ' + genName() + ' ' + genName(),\n        'phone_number': genPhoneNumber(),\n    }\n}\nfunction factoryImport(id) {\n    return {\n        'id': 'IP' + padWithLeadingZeros(id, 3),\n        'provider_name': genName() + ' ' + genName(),\n        'phone_number': genPhoneNumber(),\n        'date': randomDate(new Date(2023, 0, 1), new Date()),\n        'total': Math.floor(Math.random() * 500) + 500,\n        'status': getStatus2()\n    }\n}\nfunction genPhoneNumber(){\n    let a = [48];\n    for (let i = 0; i < 9; ++i) a.push(Math.floor(Math.random() * 10) + 48);\n    return String.fromCharCode(...a)\n}\nfunction genName() {\n    let a = [];\n    for (let i = 0; i < 5; ++i) a.push(Math.floor(Math.random() * 26) + 65);\n    return String.fromCharCode(...a)\n}\nexport function genInventory() {\n    let arr = [];\n    for (let i = 1; i <= num_of_rec; ++i) {\n        arr.push(factoryInventory(i));\n    }\n\n    return arr;\n}\nexport function genOrder() {\n    let arr = [];\n    for (let i = 1; i <= num_of_rec; ++i) {\n        arr.push(factoryOrder(i));\n    }\n\n    return arr;\n}\nexport function genCustomer() {\n    let arr = [];\n    for (let i = 1; i <= num_of_rec; ++i) {\n        arr.push(factoryCustomer(i));\n    }\n    return arr;\n}\nexport function genProvider() {\n    let arr = [];\n    for (let i = 1; i <= num_of_rec; ++i) {\n        arr.push(factoryProvider(i));\n    }\n    return arr;\n}\nexport function genProductOrder() {\n    let arr = [];\n    for (let i = 1; i <= num_of_rec; ++i) {\n        let tmp = factoryProductOrder(i);\n        tmp['total'] = tmp['quantity'] * tmp['price'];\n        arr.push(tmp);\n    }\n    return arr;\n}\nexport function genImportProduct() {\n    let arr = [];\n    for (let i = 1; i <= num_of_rec; ++i) {\n        let tmp = factoryImport(i);\n        arr.push(tmp);\n    }\n    return arr;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}