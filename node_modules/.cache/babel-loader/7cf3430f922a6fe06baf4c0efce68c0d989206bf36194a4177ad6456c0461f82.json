{"ast":null,"code":"import { data } from \"./data\";\nexport const requestForData = dataType => new Promise(resolve => {\n  setTimeout(() => {\n    resolve({\n      tableData: data[dataType].tableData,\n      column: data[dataType].column\n    });\n  }, 1000);\n});\nconst path = 'http://localhost';\nexport const fetchProductData = async productID => {\n  const url = path + '/dtb_project_php/listing/product/productdata.php';\n  const params = new URLSearchParams({\n    id: productID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchCustomerData = async customerId => {\n  const url = path + '/dtb_project_php/listing/customer/customerdata.php';\n  const params = new URLSearchParams({\n    id: customerId\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchProviderData = async providerId => {\n  const url = path + '/dtb_project_php/listing/provider/providerdata.php';\n  const params = new URLSearchParams({\n    id: providerId\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchImportData = async importID => {\n  const url = path + '/dtb_project_php/listing/import/importdata.php';\n  const params = new URLSearchParams({\n    id: importID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchOrderData = async orderID => {\n  console.log(orderID);\n  const url = path + '/dtb_project_php/listing/order/orderdata.php';\n  const params = new URLSearchParams({\n    id: orderID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchData = async (dataType, uid) => {\n  const url_ = {\n    inventory: '/dtb_project_php/listing/product/inventory.php',\n    customer: '/dtb_project_php/listing/customer/customer.php',\n    orderFromCustomer: '/dtb_project_php/listing/customer/orderFromCustomer.php',\n    provider: '/dtb_project_php/listing/provider/provider.php',\n    importFromProvider: '/dtb_project_php/listing/provider/importFromProvider.php',\n    'import': '/dtb_project_php/listing/import/import.php',\n    importDetail: 'http://localhost/dtb_project_php/listing/import/importDetail.php',\n    order: 'http://localhost/dtb_project_php/listing/order/order.php',\n    orderDetail: 'http://localhost/dtb_project_php/listing/order/orderDetail.php'\n  };\n  const url = path + url_[dataType];\n  console.log(url);\n  const params = new URLSearchParams({\n    id: uid\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = response.json();\n  return data;\n};\nexport const genNewCustomerID = async () => {\n  const url = 'http://localhost/dtb_project_php/modify/customer/gencustomerid.php';\n  const response = await fetch(url);\n  return response.json();\n};\nexport const genNewProviderID = async () => {\n  const url = 'http://localhost/dtb_project_php/modify/provider/genproviderid.php';\n  const response = await fetch(url);\n  return response.json();\n};\nexport const addingCustomer = async data => {\n  const url = 'http://localhost/dtb_project_php/modify/customer/insertcustomer.php';\n  const params = new URLSearchParams();\n  for (const [key, value] of Object.entries(data)) {\n    params.append(key, value);\n  }\n  fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  return true;\n};\nexport const updateCustomer = async (id, data) => {\n  const url = 'http://localhost/dtb_project_php/modify/customer/updatecustomerinfo.php';\n  const params = new URLSearchParams();\n  params.append('id', id);\n  for (const [key, value] of Object.entries(data)) {\n    params.append(key, value);\n  }\n  fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  return true;\n};\nexport const deleteCustomer = async id => {\n  const url = 'http://localhost/dtb_project_php/modify/customer/deletecustomer.php';\n  const params = new URLSearchParams();\n  params.append('id', id);\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  console.log(response);\n  return true;\n};\nexport const updateProvider = async (id, data) => {\n  const url = 'http://localhost/dtb_project_php/modify/provider/updateprovider.php';\n  const params = new URLSearchParams();\n  params.append('id', id);\n  for (const [key, value] of Object.entries(data)) {\n    params.append(key, value);\n  }\n  fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  return true;\n};\nexport const addingProvider = async data => {\n  const url = 'http://localhost/dtb_project_php/modify/provider/insertprovider.php';\n  const params = new URLSearchParams();\n  console.log(data);\n  for (const [key, value] of Object.entries(data)) {\n    params.append(key, value);\n  }\n  fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  return true;\n};\nexport const deleteProvider = async id => {\n  const url = 'http://localhost/dtb_project_php/modify/provider/deleteprovider.php';\n  const params = new URLSearchParams();\n  params.append('id', id);\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  return true;\n};\nexport const deleteOrder = async orderID => {\n  const url = 'http://localhost/dtb_project_php/modify/order/deleteorder.php';\n  const params = new URLSearchParams({\n    id: orderID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  return data;\n};\nexport const approveOrder = async orderID => {\n  const url = 'http://localhost/dtb_project_php/modify/order/approveorder.php';\n  const params = new URLSearchParams({\n    id: orderID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const unapproveOrder = async orderID => {\n  const url = 'http://localhost/dtb_project_php/modify/order/unapproveorder.php';\n  const params = new URLSearchParams({\n    id: orderID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  return data;\n};\nexport const rejectOrder = async orderID => {\n  const url = 'http://localhost/dtb_project_php/modify/order/rejectorder.php';\n  const params = new URLSearchParams({\n    id: orderID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n//\nexport const updateProduct = async (id, data) => {\n  const url = 'http://localhost/dtb_project_php/modify/product/updateproduct.php';\n  const params = new URLSearchParams();\n  params.append('id', id);\n  for (const [key, value] of Object.entries(data)) {\n    params.append(key, value);\n  }\n  fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  return true;\n};\nexport const addingProduct = async data => {\n  const url = 'http://localhost/dtb_project_php/modify/product/insertproduct.php';\n  const params = new URLSearchParams();\n  for (const [key, value] of Object.entries(data)) {\n    params.append(key, value);\n  }\n  fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  return true;\n};\nexport const genNewProductID = async () => {\n  const url = 'http://localhost/dtb_project_php/modify/product/genproductid.php';\n  const response = await fetch(url);\n  return response.json();\n};\nexport const deleteProduct = async data => {\n  // const url='http://localhost/dtb_project_php/modify/product/deleteproduct.php'\n  // const params = new URLSearchParams();\n  // params.append('id', id);\n  // const response = await fetch(url, {\n  //     method: 'POST',\n  //     body: params\n  // });\n  // console.log(response);\n  return true;\n};\n//\n// export const updateImport = async (id, data) => {\n//     return true;\n// }\n// export const addingImport = async (data) => {\n//     return true;\n// }\nexport const genNewImportID = async () => {\n  return 'CS009';\n};\nexport const deleteImport = async importID => {\n  const url = 'http://localhost/dtb_project_php/modify/import/deleteimport.php';\n  const params = new URLSearchParams({\n    id: importID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const approveImport = async importID => {\n  const url = 'http://localhost/dtb_project_php/modify/import/approveimport.php';\n  const params = new URLSearchParams({\n    id: importID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const rejectImport = async importID => {\n  const url = 'http://localhost/dtb_project_php/modify/import/rejectimport.php';\n  const params = new URLSearchParams({\n    id: importID\n  });\n  const response = await fetch(url, {\n    method: 'POST',\n    body: params\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};","map":{"version":3,"names":["data","requestForData","dataType","Promise","resolve","setTimeout","tableData","column","path","fetchProductData","productID","url","params","URLSearchParams","id","response","fetch","method","body","json","fetchCustomerData","customerId","fetchProviderData","providerId","fetchImportData","importID","fetchOrderData","orderID","console","log","fetchData","uid","url_","inventory","customer","orderFromCustomer","provider","importFromProvider","importDetail","order","orderDetail","genNewCustomerID","genNewProviderID","addingCustomer","key","value","Object","entries","append","updateCustomer","deleteCustomer","updateProvider","addingProvider","deleteProvider","deleteOrder","approveOrder","unapproveOrder","rejectOrder","updateProduct","addingProduct","genNewProductID","deleteProduct","genNewImportID","deleteImport","approveImport","rejectImport"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/management_demo1-main/src/additionalFunction.js"],"sourcesContent":["import {data} from \"./data\"\nexport const requestForData = (dataType) => new Promise(resolve => {\n    setTimeout(() => {\n        resolve({ tableData: data[dataType].tableData, column: data[dataType].column })\n    }, 1000);\n});\n\nconst path = 'http://localhost';\n\nexport const fetchProductData = async (productID) => {\n    const url = path+'/dtb_project_php/listing/product/productdata.php'\n    const params = new URLSearchParams({ id: productID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    return data;\n}\n\nexport const fetchCustomerData = async (customerId) => {\n    const url = path+'/dtb_project_php/listing/customer/customerdata.php'\n    const params = new URLSearchParams({ id: customerId });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    return data;\n}\nexport const fetchProviderData = async (providerId) => {\n    const url = path+'/dtb_project_php/listing/provider/providerdata.php'\n    const params = new URLSearchParams({ id: providerId });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    return data;\n}\n\nexport const fetchImportData = async (importID) => {\n    const url = path+'/dtb_project_php/listing/import/importdata.php'\n    const params = new URLSearchParams({ id: importID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    return data;\n}\n\nexport const fetchOrderData = async (orderID) => {\n    console.log(orderID);\n    const url = path+'/dtb_project_php/listing/order/orderdata.php'\n    const params = new URLSearchParams({ id: orderID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    return data;\n}\n\nexport const fetchData = async (dataType, uid) => {\n    const url_ = {\n        inventory: '/dtb_project_php/listing/product/inventory.php',\n        customer: '/dtb_project_php/listing/customer/customer.php',\n        orderFromCustomer: '/dtb_project_php/listing/customer/orderFromCustomer.php',\n        provider: '/dtb_project_php/listing/provider/provider.php',     \n        importFromProvider: '/dtb_project_php/listing/provider/importFromProvider.php',\n        'import': '/dtb_project_php/listing/import/import.php',\n        importDetail: 'http://localhost/dtb_project_php/listing/import/importDetail.php',\n        order: 'http://localhost/dtb_project_php/listing/order/order.php',\n        orderDetail: 'http://localhost/dtb_project_php/listing/order/orderDetail.php',\n    }\n    const url=path+url_[dataType];\n    console.log(url);\n    const params = new URLSearchParams({ id: uid });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = response.json();\n    return data\n}\n\nexport const genNewCustomerID = async () => {\n    const url = 'http://localhost/dtb_project_php/modify/customer/gencustomerid.php';\n    const response = await fetch(url);\n    return response.json();\n}\n\nexport const genNewProviderID = async () => {\n    const url = 'http://localhost/dtb_project_php/modify/provider/genproviderid.php';\n    const response = await fetch(url);\n    return response.json();\n}\n\nexport const addingCustomer = async (data) => {\n    const url='http://localhost/dtb_project_php/modify/customer/insertcustomer.php'\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(data)) {\n        params.append(key, value);\n    }\n    fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    return true;\n}\n\nexport const updateCustomer = async (id, data) => {\n    const url='http://localhost/dtb_project_php/modify/customer/updatecustomerinfo.php'\n    const params = new URLSearchParams();\n    params.append('id', id);\n    for (const [key, value] of Object.entries(data)) {\n        params.append(key, value);\n    }\n    fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    return true;\n}\n\nexport const deleteCustomer = async (id) => {\n    const url='http://localhost/dtb_project_php/modify/customer/deletecustomer.php'\n    const params = new URLSearchParams();\n    params.append('id', id);\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    console.log(response);\n    return true;\n}\n\nexport const updateProvider = async (id, data) => {\n    const url='http://localhost/dtb_project_php/modify/provider/updateprovider.php'\n    const params = new URLSearchParams();\n    params.append('id', id);\n    for (const [key, value] of Object.entries(data)) {\n        params.append(key, value);\n    }\n    fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    return true;\n}\nexport const addingProvider = async (data) => {\n    const url='http://localhost/dtb_project_php/modify/provider/insertprovider.php'\n    const params = new URLSearchParams();\n    console.log(data);\n    for (const [key, value] of Object.entries(data)) {\n        params.append(key, value);\n    }\n    fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    return true;\n}\nexport const deleteProvider = async (id) => {\n    const url='http://localhost/dtb_project_php/modify/provider/deleteprovider.php'\n    const params = new URLSearchParams();\n    params.append('id', id);\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    return true;\n}\n\nexport const deleteOrder = async (orderID) => {\n    const url='http://localhost/dtb_project_php/modify/order/deleteorder.php'\n    const params = new URLSearchParams({ id: orderID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    return data;\n}\nexport const approveOrder = async (orderID) => {\n    const url='http://localhost/dtb_project_php/modify/order/approveorder.php'\n    const params = new URLSearchParams({ id: orderID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\nexport const unapproveOrder = async (orderID) => {\n    const url='http://localhost/dtb_project_php/modify/order/unapproveorder.php'\n    const params = new URLSearchParams({ id: orderID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    return data;\n}\nexport const rejectOrder = async (orderID) => {\n    const url='http://localhost/dtb_project_php/modify/order/rejectorder.php'\n    const params = new URLSearchParams({ id: orderID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\n//\nexport const updateProduct = async (id, data) => {\n    const url='http://localhost/dtb_project_php/modify/product/updateproduct.php'\n    const params = new URLSearchParams();\n    params.append('id', id);\n    for (const [key, value] of Object.entries(data)) {\n        params.append(key, value);\n    }\n    fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    return true;\n}\nexport const addingProduct = async (data) => {\n    const url='http://localhost/dtb_project_php/modify/product/insertproduct.php'\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(data)) {\n        params.append(key, value);\n    }\n    fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    return true;\n}\nexport const genNewProductID = async () => {\n    const url = 'http://localhost/dtb_project_php/modify/product/genproductid.php';\n    const response = await fetch(url);\n    return response.json();\n}\nexport const deleteProduct = async (data) => {\n    // const url='http://localhost/dtb_project_php/modify/product/deleteproduct.php'\n    // const params = new URLSearchParams();\n    // params.append('id', id);\n    // const response = await fetch(url, {\n    //     method: 'POST',\n    //     body: params\n    // });\n    // console.log(response);\n    return true;\n}\n//\n// export const updateImport = async (id, data) => {\n//     return true;\n// }\n// export const addingImport = async (data) => {\n//     return true;\n// }\nexport const genNewImportID = async () => {\n    return 'CS009';\n}\nexport const deleteImport = async (importID) => {\n    const url='http://localhost/dtb_project_php/modify/import/deleteimport.php'\n    const params = new URLSearchParams({ id: importID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\nexport const approveImport = async (importID) => {\n    const url='http://localhost/dtb_project_php/modify/import/approveimport.php'\n    const params = new URLSearchParams({ id: importID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\nexport const rejectImport = async (importID) => {\n    const url='http://localhost/dtb_project_php/modify/import/rejectimport.php'\n    const params = new URLSearchParams({ id: importID });\n    const response = await fetch(url, {\n        method: 'POST',\n        body: params\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}